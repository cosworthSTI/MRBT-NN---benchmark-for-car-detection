############################################################################
# Dockerfile by Adam Ligocki to run nvidia-docker for purpose of neural nets
# Based on Ubuntu

FROM nvidia/cuda:latest
#FROM ubuntu:xenial
MAINTAINER Adam Ligocki

RUN apt-get update

RUN apt-get install -y iputils-ping

# Locale
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV LANGUAGE=en_US:en

# set root password
RUN echo "root:root" | chpasswd

# create user adam
RUN useradd --create-home --shell=/bin/bash adam
RUN adduser adam video
RUN echo "adam:hovno" | chpasswd
RUN usermod -aG sudo adam
RUN echo "adam ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# set file system permitions
RUN chown -R adam:adam /home/adam

ENV HOME=/home/adam
ENV USER=adam
ENV DISPLAY=:0
ENV QT_GRAPHICSSYSTEM=native


RUN apt-get install -y python3
RUN apt-get install -y python3-pip
RUN apt-get install -y git 
RUN apt-get install -y wget 
RUN apt-get install -y vim 
#RUN apt-get install -y cuda
RUN apt-get install cuda-8.0
#RUN apt-get install -y nvidia-cuda-toolkit

RUN apt-get install -y language-pack-en-base

RUN pip3 install numpy
RUN pip3 install scipy
RUN pip3 install matplotlib
RUN pip3 install tf-nightly-gpu
#RUN pip3 install tensorflow-gpu
RUN pip3 install keras
RUN pip3 install jupyter
RUN pip3 install h5py


EXPOSE 8888

USER adam
WORKDIR /home/adam

#CMD jupyter notebook --ip="172.17.0.2" --port=8888

# nvidia-docker run -v /home/adam/Developer:/home/adam/Developer -v /home/adam/Data:/home/adam/Data -v /home/adam/Software:/home/adam/Software -i -t -d -p 8888:8888 --name neural_net_container neural_network_image:latest
# docker build -f neural_net_dockerfile -t neural_network_image:latest .
# jupyter notebook --ip="172.17.0.2" --port=8888



# install CUDA Toolkit v8.0
# instructions from https://developer.nvidia.com/cuda-downloads (linux -> x86_64 -> Ubuntu -> 16.04 -> deb (network))
#CUDA_REPO_PKG="cuda-repo-ubuntu1604_8.0.61-1_amd64.deb"
#wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/${CUDA_REPO_PKG}
#sudo dpkg -i ${CUDA_REPO_PKG}
#sudo apt-get update
#sudo apt-get -y install cuda

# install cuDNN v6.0
#CUDNN_TAR_FILE="cudnn-8.0-linux-x64-v6.0.tgz"
#wget http://developer.download.nvidia.com/compute/redist/cudnn/v6.0/${CUDNN_TAR_FILE}
#tar -xzvf ${CUDNN_TAR_FILE}
#sudo cp -P cuda/include/cudnn.h /usr/local/cuda-8.0/include
#sudo cp -P cuda/lib64/libcudnn* /usr/local/cuda-8.0/lib64/
#sudo chmod a+r /usr/local/cuda-8.0/lib64/libcudnn*

#export PATH=/usr/local/cuda-8.0/bin${PATH:+:${PATH}}
#export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
